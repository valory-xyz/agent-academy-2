; By default, testenvs are configured to:
; - don't skip dist (skipsdist = False)
; - don't skip the package installation (skip_install = False)
; - don't use source installation (usedevelop = False)
; where one of those steps is not necessary for the test,
; we set the associated flag (e.g. for linting we don't need
; the package installation).
[tox]
envlist = bandit, safety, black, black-check, isort, isort-check, fix-copyright, check-copyright, check-hash, check-packages, flake8, mypy, pylint, darglint, check-generate-all-protocols, abci-docstrings, check-abciapp-specs, py{3.7,3.8,3.9,3.10}-{win,linux,darwin}
; when running locally we don't want to fail for no good reason
skip_missing_interpreters = true

[testenv]
basepython = python3
whitelist_externals = /bin/sh
passenv = *
extras = all
deps =
    aiohttp==3.7.4.post0
    asn1crypto==1.5.1
    certifi==2021.10.8
    grpcio==1.43.0
    hypothesis==6.21.6
    py-ecc==5.2.0
    py-eth-sig-utils==0.4.0
    pytz==2022.2.1
    pytest==7.0.0
    pytest-randomly==3.11.0
    pytest-cov==3.0.0
    pytest-asyncio==0.18.0
    open-aea==1.28.0.post1
    open-aea-ledger-ethereum==1.28.0.post1
    open-aea-ledger-cosmos==1.28.0.post1
    open-aea-cli-ipfs==1.28.0.post1
    open-aea-test-autonomy==0.8.0
    open-autonomy==0.8.0
setenv =
    PYTHONHASHSEED=0
commands =
    autonomy init --reset --author ci --remote --ipfs --ipfs-node "/dns/registry.autonolas.tech/tcp/443/https"
    autonomy packages sync
    pytest -rfE --doctest-modules packages/gabrielfu packages/keep3r_co packages/valory/contracts/keep3r_test_job --cov=packages --cov-report=xml --cov-report=term --cov-report=term-missing --cov-config=.coveragerc {posargs}

[testenv:py3.7]
basepython = python3.7
usedevelop = True
deps =
    {[testenv]deps}
setenv =
    {[testenv]setenv}

[testenv:py3.8]
basepython = python3.8
usedevelop = True
deps =
    {[testenv]deps}
setenv =
    {[testenv]setenv}

[testenv:py3.9]
basepython = python3.9
usedevelop = True
deps =
    {[testenv]deps}
setenv =
    {[testenv]setenv}

[testenv:py3.10]
basepython = python3.10
platform=^linux$
usedevelop = True
deps =
    {[testenv]deps}
setenv =
    {[testenv]setenv}

[testenv:py3.7-win]
basepython = python3.7
platform=^win32$
usedevelop = True
deps =
    {[testenv]deps}
setenv =
    {[testenv]setenv}

[testenv:py3.8-win]
basepython = python3.8
platform=^win32$
usedevelop = True
deps =
    {[testenv]deps}
setenv =
    {[testenv]setenv}

[testenv:py3.9-win]
basepython = python3.9
platform=^win32$
usedevelop = True
deps =
    {[testenv]deps}
setenv =
    {[testenv]setenv}

[testenv:py3.10-win]
basepython = python3.10
platform=^win32$
usedevelop = True
deps =
    {[testenv]deps}
setenv =
    {[testenv]setenv}

[testenv:py3.7-darwin]
basepython = python3.7
platform=^darwin$
usedevelop = True
deps =
    {[testenv]deps}
setenv =
    {[testenv]setenv}

[testenv:py3.8-darwin]
basepython = python3.8
platform=^darwin$
usedevelop = True
deps =
    {[testenv]deps}
setenv =
    {[testenv]setenv}

[testenv:py3.9-darwin]
basepython = python3.9
platform=^darwin$
usedevelop = True
deps =
    {[testenv]deps}
setenv =
    {[testenv]setenv}

[testenv:py3.10-darwin]
basepython = python3.10
platform=^darwin$
usedevelop = True
deps =
    {[testenv]deps}
setenv =
    {[testenv]setenv}

[testenv:bandit]
skipsdist = True
skip_install = True
deps =
    tomte[bandit]==0.1.5
commands = bandit -s B101 -r packages
           bandit -s B101 -r tests scripts

[testenv:black]
skipsdist = True
skip_install = True
deps =
    tomte[black]==0.1.5
commands = black packages scripts tests

[testenv:black-check]
skipsdist = True
skip_install = True
deps =
    tomte[black]==0.1.5
commands = black --check packages scripts tests

[testenv:isort]
skipsdist = True
skip_install = True
deps = tomte[isort]==0.1.5
commands =
    isort packages/gabrielfu
    isort packages/keep3r_co
    isort packages/valory/contracts/keep3r_test_job
    isort packages/valory/contracts/keep3r_v1
    isort packages/valory/contracts/keep3r_v1_library
    isort scripts/
    isort tests/

[testenv:isort-check]
skipsdist = True
skip_install = True
deps = tomte[isort]==0.1.5
commands =
    isort --check-only packages/gabrielfu
    isort --check-only packages/keep3r_co
    isort --check-only packages/valory/contracts/keep3r_test_job
    isort --check-only packages/valory/contracts/keep3r_v1
    isort --check-only packages/valory/contracts/keep3r_v1_library
    isort --check-only scripts/
    isort --check-only tests/

[testenv:fix-copyright]
skipsdist = True
skip_install = True
deps =
commands = {toxinidir}/scripts/check_copyright.py

[testenv:check-copyright]
skipsdist = True
skip_install = True
deps =
commands = {toxinidir}/scripts/check_copyright.py --check

[testenv:check-hash]
skipsdist = True
skip_install = True
deps =
    {[testenv]deps}
commands = python -m autonomy.cli packages lock --check {posargs}

[testenv:check-packages]
skipsdist = True
skip_install = True
deps = {[testenv]deps}
commands =
    autonomy init --reset --author ci --remote --ipfs --ipfs-node "/dns/registry.autonolas.tech/tcp/443/https"
    autonomy packages sync
    autonomy check-packages

[testenv:flake8]
skipsdist = True
skip_install = True
deps =
    tomte[flake8]==0.1.5
commands =
    flake8 packages/gabrielfu packages/keep3r_co packages/valory/contracts/keep3r_test_job packages/valory/contracts/keep3r_v1 packages/valory/contracts/keep3r_v1_library scripts tests

[testenv:mypy]
skipsdist = True
skip_install = True
deps =
    {[testenv]deps}
    tomte[mypy]==0.1.5
    types-PyYAML==6.0.12.6
commands = 
        autonomy init --reset --author ci --remote --ipfs --ipfs-node "/dns/registry.autonolas.tech/tcp/443/https"
        autonomy packages sync
        mypy packages/gabrielfu packages/keep3r_co packages/valory/contracts/keep3r_test_job packages/valory/contracts/keep3r_v1 packages/valory/contracts/keep3r_v1_library scripts --disallow-untyped-defs
        mypy tests --disallow-untyped-defs

[testenv:pylint]
whitelist_externals = /bin/sh
skipsdist = True
deps =
    {[testenv]deps}
    tomte[pylint]==0.1.5
commands = pylint packages scripts

[testenv:safety]
skipsdist = True
skip_install = True
deps =
    tomte[safety]==0.1.5
commands = safety check -i 37524 -i 38038 -i 37776 -i 38039 -i 39621 -i 40291 -i 39706 -i 41002 -i 51358 -i 51499

[testenv:darglint]
skipsdist = True
skip_install = True
deps =
    tomte[darglint]==0.1.5
commands = darglint scripts packages/keep3r_co tests

[testenv:check-generate-all-protocols]
skipsdist = True
usedevelop = True
deps =
    tomte[isort]==0.1.5
    tomte[black]==0.1.5
commands = aea generate-all-protocols --check-clean

[testenv:abci-docstrings]
skipsdist = True
usedevelop = True
commands = autonomy analyse docstrings --update

[testenv:check-abciapp-specs]
skipsdist = True
usedevelop = True
commands =
    autonomy init --reset --author ci --remote --ipfs --ipfs-node "/dns/registry.autonolas.tech/tcp/443/https"
    autonomy packages sync
    autonomy analyse fsm-specs
